/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Interfaz.Tablemodels.TableModelCarreras;
import Logica.GestionDeCarreras;
import Modelo.Carrera;
import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import org.openide.util.Exceptions;

/**
 *
 * @author Mario
 */
public class CarrerasFinalizadas extends javax.swing.JDialog {

    private GestionDeCarreras gdCarreras;
    private List<Carrera> carreras;
    private JRDataSource dataSource;
    private Map parametros;
    private JasperPrint print;
    private boolean finalizada;

    /**
     * Creates new form CarrerasFinalizadas
     */
    public CarrerasFinalizadas(java.awt.Dialog parent, boolean modal, GestionDeCarreras gdCarreras, boolean finalizada) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.gdCarreras = gdCarreras;
        this.finalizada = finalizada;
        carreras = gdCarreras.carrerasFinalizadas();
        rellenarTablaCarreras();
    }

    public CarrerasFinalizadas(java.awt.Dialog parent, boolean modal, GestionDeCarreras gdCarreras) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.gdCarreras = gdCarreras;
        carreras = gdCarreras.getListaCarreras();
        rellenarTablaCarreras();
    }

    private void rellenarTablaCarreras() {
        jTableCarrera.setModel(new TableModelCarreras(carreras));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCarrera = new javax.swing.JTable();
        jButtonInforme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableCarrera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCarrera);

        jButtonInforme.setText("Imprimir informe");
        jButtonInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInformeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(jButtonInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonInforme)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInformeActionPerformed
        if (finalizada) {
            try {
                if (jTableCarrera.getSelectedRow() != -1) {
                    dataSource = new JRBeanCollectionDataSource(carreras.get(jTableCarrera.getSelectedRow()).getListaCorredores());
                    parametros = new HashMap();
                    parametros.put("NomCarrera", carreras.get(jTableCarrera.getSelectedRow()).getNombre());
                    print = JasperFillManager.fillReport("reports/jasper/clasificacioncorredores.jasper", parametros, dataSource);
                    //JasperExportManager.exportReportToPdfFile(print, "reports/pdf/clasificacioncorredores.pdf");
                    JasperExportManager.exportReportToPdfFile(print, seleccionarDirectorio(this)
                            + File.separator + "clasificacion-" + carreras.get(jTableCarrera.getSelectedRow()).getNombre() + ".pdf");
                }
            } catch (JRException ex) {
                Exceptions.printStackTrace(ex);
            }
        } else {
            if (jTableCarrera.getSelectedRow() != -1) {
                try {
                    List<Carrera> tempList = new ArrayList<>();
                    tempList.add(carreras.get(jTableCarrera.getSelectedRow()));
                    dataSource = new JRBeanCollectionDataSource(tempList);
                    parametros = new HashMap();
                    parametros.put("NumCorredores", carreras.get(jTableCarrera.getSelectedRow()).getListaCorredores().size() + "");
                    print = JasperFillManager.fillReport("reports/jasper/informecarrera.jasper", parametros, dataSource);
                    //JasperExportManager.exportReportToPdfFile(print, "reports/pdf/informecarrera.pdf");
                    JasperExportManager.exportReportToPdfFile(
                            print, seleccionarDirectorio(this)
                            + File.separator + "informe-" + carreras.get(jTableCarrera.getSelectedRow()).getNombre() + ".pdf");
                } catch (JRException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonInformeActionPerformed

    public String seleccionarDirectorio(Component pantalla) {
        File file = null;
        JFileChooser jc = new JFileChooser();
        this.setLocationRelativeTo(null);
        jc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int seleccion = jc.showOpenDialog(pantalla);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            file = jc.getSelectedFile();
        }
        return file.getAbsolutePath();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonInforme;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCarrera;
    // End of variables declaration//GEN-END:variables
}
